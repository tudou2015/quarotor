// Generated by gencpp from file uart/uart_srv2.msg
// DO NOT EDIT!


#ifndef UART_MESSAGE_UART_SRV2_H
#define UART_MESSAGE_UART_SRV2_H

#include <ros/service_traits.h>


#include <uart/uart_srv2Request.h>
#include <uart/uart_srv2Response.h>


namespace uart
{

struct uart_srv2
{

typedef uart_srv2Request Request;
typedef uart_srv2Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct uart_srv2
} // namespace uart


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::uart::uart_srv2 > {
  static const char* value()
  {
    return "f3fd65dfbcbf72139f8cc955ff4cf532";
  }

  static const char* value(const ::uart::uart_srv2&) { return value(); }
};

template<>
struct DataType< ::uart::uart_srv2 > {
  static const char* value()
  {
    return "uart/uart_srv2";
  }

  static const char* value(const ::uart::uart_srv2&) { return value(); }
};


// service_traits::MD5Sum< ::uart::uart_srv2Request> should match 
// service_traits::MD5Sum< ::uart::uart_srv2 > 
template<>
struct MD5Sum< ::uart::uart_srv2Request>
{
  static const char* value()
  {
    return MD5Sum< ::uart::uart_srv2 >::value();
  }
  static const char* value(const ::uart::uart_srv2Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::uart::uart_srv2Request> should match 
// service_traits::DataType< ::uart::uart_srv2 > 
template<>
struct DataType< ::uart::uart_srv2Request>
{
  static const char* value()
  {
    return DataType< ::uart::uart_srv2 >::value();
  }
  static const char* value(const ::uart::uart_srv2Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::uart::uart_srv2Response> should match 
// service_traits::MD5Sum< ::uart::uart_srv2 > 
template<>
struct MD5Sum< ::uart::uart_srv2Response>
{
  static const char* value()
  {
    return MD5Sum< ::uart::uart_srv2 >::value();
  }
  static const char* value(const ::uart::uart_srv2Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::uart::uart_srv2Response> should match 
// service_traits::DataType< ::uart::uart_srv2 > 
template<>
struct DataType< ::uart::uart_srv2Response>
{
  static const char* value()
  {
    return DataType< ::uart::uart_srv2 >::value();
  }
  static const char* value(const ::uart::uart_srv2Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // UART_MESSAGE_UART_SRV2_H
